filter(timePeriods == c("ILM", "IR", "IRL"))
#locs=locsRaw[ with(locsRaw, grepl("\\bfort\\b",featureType)),]
locsPeriods=locsRaw[ with(locsRaw, grepl("\\broman\\b|\\bclassical\\b|\\barchaic\\b|\\blate-antique\\b|\\hellenistic-republican\\b",timePeriodsKeys)),]
locsArchaic=locsPeriods[ with(locsPeriods, grepl("^A|A\\w+",timePeriods)),]
locsRoman=locsPeriods[ with(locsPeriods, grepl("^R|R\\w+",timePeriods)),]
locsClassical=locsPeriods[ with(locsPeriods, grepl("^C|C\\w+",timePeriods)),]
locsHellenisticRepublican=locsPeriods[ with(locsPeriods, grepl("^H|H\\w+",timePeriods)),]
locsLateAntique=locsPeriods[ with(locsPeriods, grepl("^L|L\\w+",timePeriods)),]
library(dplyr)
locsArchaic <- locsArchaic %>%
select(uid) %>%
mutate(epoch = "archaic")
locsArchaic
locsRoman <- locsRoman %>%
select(uid) %>%
mutate(epoch = "roman")
locsRoman
locsClassical <- locsClassical %>%
select(uid) %>%
mutate(epoch = "classical")
locsClassical
locsHellenisticRepublican <- locsHellenisticRepublican %>%
select(uid) %>%
mutate(epoch = "hellenistic-republican")
locsHellenisticRepublican
locsLateAntique <- locsLateAntique %>%
select(uid) %>%
mutate(epoch = "late-antique")
locsLateAntique
joinLocs <- full_join(locsClassical, locsArchaic)
joinLocs <- full_join(joinLocs, locsRoman)
joinLocs <- full_join(joinLocs, locsLateAntique)
joinLocs <- full_join(joinLocs, locsHellenisticRepublican)
joinedLocs <- left_join(locsPeriods, joinLocs, by = "uid")
locsNicelyCleaned <- joinedLocs %>%
filter(epoch == c("classical", "roman", "late-antique", "hellenistic-republican", "archaic"))
locsNicelyCleaned
joinedLocs
#install.packages("gifski")
library(gifski)
library(gganimate)
library(ggplot2)
library(ggspatial)
library(dplyr)
locsPeriods=locsRaw[ with(locsRaw, grepl("\\broman\\b|\\bclassical\\b|\\barchaic\\b|\\blate-antique\\b|\\hellenistic-republican\\b",timePeriodsKeys)),]
locsArchaic=locsPeriods[ with(locsPeriods, grepl("^A|A\\w+",timePeriods)),]
locsRoman=locsPeriods[ with(locsPeriods, grepl("^R|R\\w+",timePeriods)),]
locsClassical=locsPeriods[ with(locsPeriods, grepl("^C|C\\w+",timePeriods)),]
locsHellenisticRepublican=locsPeriods[ with(locsPeriods, grepl("^H|H\\w+",timePeriods)),]
locsLateAntique=locsPeriods[ with(locsPeriods, grepl("^L|L\\w+",timePeriods)),]
locsArchaic <- locsArchaic %>%
select(uid) %>%
mutate(epoch = "archaic")
locsRoman <- locsRoman %>%
select(uid) %>%
mutate(epoch = "roman")
locsClassical <- locsClassical %>%
select(uid) %>%
mutate(epoch = "classical")
locsHellenisticRepublican <- locsHellenisticRepublican %>%
select(uid) %>%
mutate(epoch = "hellenistic-republican")
locsLateAntique <- locsLateAntique %>%
select(uid) %>%
mutate(epoch = "late-antique")
joinLocs <- full_join(locsClassical, locsArchaic)
joinLocs <- full_join(joinLocs, locsRoman)
joinLocs <- full_join(joinLocs, locsLateAntique)
joinLocs <- full_join(joinLocs, locsHellenisticRepublican)
joinedLocs <- left_join(locsPeriods, joinLocs, by = "uid")
locsNicelyCleaned <- joinedLocs %>%
filter(epoch == c("classical", "roman", "late-antique", "hellenistic-republican", "archaic"))
locs=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bfort\\b",featureType)),]
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
#geom_point(data=locsRaw,color="red",alpha=.25,size=.15,aes(y=reprLat,x=reprLong)) +
geom_point(data=locs,alpha=.7,size=2,aes(y=reprLat,x=reprLong,color=epoch)) +
coord_sf(xlim = c(-10,30), ylim = c(35,65), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Forts timelaps {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Timeperiods")+
transition_states(epoch,
transition_length = 0.5,
state_length = 0.5,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
ggsave(file="forts_in_different_periods.gif",plot=ourPlot,dpi=300,width=7,height=5)
#install.packages("gifski")
library(gifski)
library(gganimate)
library(ggplot2)
library(ggspatial)
library(dplyr)
locsPeriods=locsRaw[ with(locsRaw, grepl("\\broman\\b|\\bclassical\\b|\\barchaic\\b|\\blate-antique\\b|\\hellenistic-republican\\b",timePeriodsKeys)),]
locsArchaic=locsPeriods[ with(locsPeriods, grepl("^A|A\\w+",timePeriods)),]
locsRoman=locsPeriods[ with(locsPeriods, grepl("^R|R\\w+",timePeriods)),]
locsClassical=locsPeriods[ with(locsPeriods, grepl("^C|C\\w+",timePeriods)),]
locsHellenisticRepublican=locsPeriods[ with(locsPeriods, grepl("^H|H\\w+",timePeriods)),]
locsLateAntique=locsPeriods[ with(locsPeriods, grepl("^L|L\\w+",timePeriods)),]
locsArchaic <- locsArchaic %>%
select(uid) %>%
mutate(epoch = "archaic")
locsRoman <- locsRoman %>%
select(uid) %>%
mutate(epoch = "roman")
locsClassical <- locsClassical %>%
select(uid) %>%
mutate(epoch = "classical")
locsHellenisticRepublican <- locsHellenisticRepublican %>%
select(uid) %>%
mutate(epoch = "hellenistic-republican")
locsLateAntique <- locsLateAntique %>%
select(uid) %>%
mutate(epoch = "late-antique")
joinLocs <- full_join(locsClassical, locsArchaic)
joinLocs <- full_join(joinLocs, locsRoman)
joinLocs <- full_join(joinLocs, locsLateAntique)
joinLocs <- full_join(joinLocs, locsHellenisticRepublican)
joinedLocs <- left_join(locsPeriods, joinLocs, by = "uid")
locsNicelyCleaned <- joinedLocs %>%
filter(epoch == c("classical", "roman", "late-antique", "hellenistic-republican", "archaic"))
locs=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bfort\\b",featureType)),]
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
#geom_point(data=locsRaw,color="red",alpha=.25,size=.15,aes(y=reprLat,x=reprLong)) +
geom_point(data=locs,alpha=.7,size=2,aes(y=reprLat,x=reprLong,color=epoch)) +
coord_sf(xlim = c(-5,50), ylim = c(25,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Forts timelaps {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Timeperiods")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
ggsave(file="forts_in_different_periods.gif",plot=ourPlot,dpi=300,width=7,height=5)
#install.packages("gifski")
library(gifski)
library(gganimate)
library(ggplot2)
library(ggspatial)
library(dplyr)
locsPeriods=locsRaw[ with(locsRaw, grepl("\\broman\\b|\\bclassical\\b|\\barchaic\\b|\\blate-antique\\b|\\hellenistic-republican\\b",timePeriodsKeys)),]
locsArchaic=locsPeriods[ with(locsPeriods, grepl("^A|A\\w+",timePeriods)),]
locsRoman=locsPeriods[ with(locsPeriods, grepl("^R|R\\w+",timePeriods)),]
locsClassical=locsPeriods[ with(locsPeriods, grepl("^C|C\\w+",timePeriods)),]
locsHellenisticRepublican=locsPeriods[ with(locsPeriods, grepl("^H|H\\w+",timePeriods)),]
locsLateAntique=locsPeriods[ with(locsPeriods, grepl("^L|L\\w+",timePeriods)),]
locsArchaic <- locsArchaic %>%
select(uid) %>%
mutate(epoch = "archaic")
locsRoman <- locsRoman %>%
select(uid) %>%
mutate(epoch = "roman")
locsClassical <- locsClassical %>%
select(uid) %>%
mutate(epoch = "classical")
locsHellenisticRepublican <- locsHellenisticRepublican %>%
select(uid) %>%
mutate(epoch = "hellenistic-republican")
locsLateAntique <- locsLateAntique %>%
select(uid) %>%
mutate(epoch = "late-antique")
joinLocs <- full_join(locsClassical, locsArchaic)
joinLocs <- full_join(joinLocs, locsRoman)
joinLocs <- full_join(joinLocs, locsLateAntique)
joinLocs <- full_join(joinLocs, locsHellenisticRepublican)
joinedLocs <- left_join(locsPeriods, joinLocs, by = "uid")
locsNicelyCleaned <- joinedLocs %>%
filter(epoch == c("classical", "roman", "late-antique", "hellenistic-republican", "archaic"))
locs=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bfort\\b",featureType)),]
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
#geom_point(data=locsRaw,color="red",alpha=.25,size=.15,aes(y=reprLat,x=reprLong)) +
geom_point(data=locs,alpha=.7,size=2,aes(y=reprLat,x=reprLong,color=epoch)) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Forts timelaps {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Timeperiods")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
ggsave(file="forts_in_different_periods.gif",plot=ourPlot,dpi=300,width=7,height=5)
locsChurch=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bchurch\\b",featureType)),]
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
#geom_point(data=locsRaw,color="red",alpha=.25,size=.15,aes(y=reprLat,x=reprLong)) +
geom_point(data=locsChurch,alpha=.7,size=2,aes(y=reprLat,x=reprLong,color=epoch)) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Church timelaps {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Timeperiods")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
ggsave(file="churches_in_different_timeperiods.gif",plot=ourPlot,dpi=300,width=7,height=5)
locsSettlement=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bsettlement\\b",featureType)),]
locsChurch=locsNicelyCleaned[ with(locsNicelyCleaned, grepl("\\bchurch\\b",featureType)),]
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
geom_point(data=locsChurch,color="red",size=.15,aes(y=reprLat,x=reprLong)) +
geom_point(data=locsSettlement,alpha=.7,size=2,aes(y=reprLat,x=reprLong,color=epoch)) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Settlement timelaps {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Timeperiods")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
europop
unique(europop$year)
summary(europop)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
ggplot(europop, aes(x = population, color = region))+
geom_count(aes(y = city))+
labs(title = "European population in different periods",
x = "Time",
y = "Population",
color = "Regions")
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
europop
unique(europop$year)
summary(europop)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
ggplot(europop, aes(x = population, color = region))+
geom_count(aes(y = city))+
labs(title = "European population in different periods",
x = "Time",
y = "Population",
color = "Regions")
unique(europop$region)
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
?data.frame
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529) "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 51.862042)
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 51.862042)
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 51.862042))
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 51.862042, 50.000000))
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 51.862042, 50.000000))
new_data
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 46.068106, 51.862042))
europopCoor <- left_join(europop, new_data, by = "region")
europopCoor
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 46.068106, 51.862042))
europopCoor <- left_join(europop, new_data, by = "region")
europopCoor
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
geom_point(data=europopCoor,alpha=.6,size=1,aes(y=lat,x=long,color=region)) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Population timeplats of {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Regions")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 46.068106, 51.862042))
europopCoor <- left_join(europop, new_data, by = "region")
europopCoor
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
geom_point(data=europopCoor,alpha=.6,size=1,aes(y=lat,x=long,color=region), na.rm=TRUE) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Population timeplats of {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Regions")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 46.068106, 51.862042))
europopCoor <- left_join(europop, new_data, by = "region")
europopCoor
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
#geom_count(data=europopCoor,alpha=.6,size=1,aes(y=lat,x=long,color=region), na.rm=TRUE) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Population timeplats of {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Regions")+
transition_states(epoch,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
#install.packages("europop")
library(dplyr)
library(tidyverse)
library(europop)
library(ggplot2)
unique(europop$year)
unique(europop$region)
biggestCities <- europop %>%
filter(population >= 305)
biggestCities
new_data <- data.frame("region" = c("Scandinavia", "England and Wales", "Scotland", "Ireland", "The Netherlands", "Belgium", "Germany", "France", "Switzerland", "Northern Italy", "Central Italy", "Souther Italy", "Spain", "Portual", "Austria and Czechoslovakia", "Poland"), "long" = c(15.150000, -1.210000, -3.900000, -7.480000, 6.220000, 4.810000, 9.800000, 2.250000, 8.060000, 10.170000, 12.969905, 16.574492, -2.939996, -8.346877, 16.947380, 17.009529), "lat" = c(61.400000, 51.980000, 56.960000, 52.690000, 52.990000, 50.900000, 50.500000, 48.290000, 46.890000, 42.337603, 39.136493, 40.378632, 39.664747, 48.686041, 46.068106, 51.862042))
europopCoor <- left_join(europop, new_data, by = "region")
europopCoor
ourPlot <- ggplot(data = world) +
geom_sf(fill="grey70", color="grey50") +
geom_count(data=europopCoor,alpha=.6,size=1,aes(y=lat,x=long,color=region), na.rm=TRUE) +
coord_sf(xlim = c(-15,50), ylim = c(20,75), expand = FALSE) +
theme(panel.grid.major = element_line(color = gray(.1), linetype = "dotted", size = 0.5),
panel.background = element_rect(fill = "grey90")) +
xlab("Longitude") + ylab("Latitude") +
annotation_scale(location = "bl", width_hint = 0.25) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.0, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
#xlab("") + ylab("") +
ggtitle("Population timeplats of {closest_state}", subtitle = "Frame {frame} of {nframes}")+
labs(color = "Regions")+
transition_states(year,
transition_length = 3,
state_length = 100,
wrap = FALSE)+
enter_fade()+
exit_fade()
ourPlot
ggsave(file="european_population_timelaps.gif",plot=ourPlot,dpi=300,width=7,height=5)
